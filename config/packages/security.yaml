security:
    encoders:
        App\User\Doctrine\Entity\User:
            algorithm: auto

    providers:
        users:
            entity:
                class: App\User\Doctrine\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_doc:
            pattern: ^/api/doc\.json
            stateless: true
            anonymous: true

        refresh:
            pattern: ^/api/users/token/refresh
            stateless: true
            anonymous: true

        login:
            pattern: ^/api/users/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/users/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            lazy: true
            provider: users

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc\.json, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
